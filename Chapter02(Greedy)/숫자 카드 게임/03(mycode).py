#- 여러 개의 숫자 카드 중에서 가장 높은 숫자가 쓰인 카드 한 장을 뽑는 게임
#[규칙]
#1. 숫자가 쓰인 카드들이 N x M 형태로 놓여 있다. 이때 N은 행의 개수를 의미하며, M은 열의 개수를 의미한다.
#2. 먼저 뽑고자 하는 카드가 포함되어 있는 행을 선택한다.
#3. 그다음 선택된 행에 포함된 카드들 중 가장 숫자가 낮은 카드를 뽑아야 한다.
#4. 따라서 처음에 카드를 골라낼 행을 선택할 때, 이후에 해당 행에서 가장 숫자가 낮은 카드를 뽑을 것을 고려하여 최종적으로 가장 높은 숫자의 카드를 뽑을 수 있도록 전략을 세워야 한다.**
#- 즉, 각 행에서 가장 작은 수들 중에서 가장 큰 수를 고르는 게임

#**[조건]**

#1. 첫째 줄에 숫자 카드들이 놓인 행의 개수 N과 열의 개수 M이 공백을 기준으로 하여 각각 자연수로 주어진다.(1≤N, M≤100)
#2. 둘째 줄부터 N개의 줄에 걸쳐 각 카드에 적힌 숫자가 주어진다. 각 숫자는 1 이상 10000 이하의 자연수이다.


#NxM크기의 2차원 리스트 초기화
#n=3;m=4
#array4=[[0]*m for _ in range(n)] # _(언더바)는 반복을 수행하되 변수값을 무시할 때 사용
#print(array4)

N,M=map(int,input().split()) #행렬의 크기를 나타내는 변수. N은 행, M은 열

my_array=[list(map(int,input().split())) for _ in range(N)] #2차원 배열을 선언하는 방법 잘 기억해두자

result=0 #결과 값을 저장할 변수
for i in range(N): #각 행별로 가장 작은 수를 찾기 위한 for문
    min_max=my_array[i][0] #min_max는 각 행의 가장 작은 수를 저장하기 위한 변수, 우선 행의 가장 첫 인덱스의 숫자를 입력
    for j in range(M): #각 행에서 모든 index의 값을 비교하기 위한 for문
        if min_max>my_array[i][j]: #가장 작은 수를 찾기 위한 조건문
            min_max=my_array[i][j]
    if min_max>result:
        result=min_max

print(result)